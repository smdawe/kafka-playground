plugins {
  id 'org.springframework.boot' version '2.6.7'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
  id 'groovy'
}

repositories {
  mavenCentral()
}

sourceSets {
  acceptanceTest {
    groovy {
      srcDir file('/src/acceptanceTest/groovy')
      compileClasspath += main.output + test.output + configurations.testRuntimeOnly + configurations.testImplementation
      runtimeClasspath += output + compileClasspath
    }
  }
}

configurations {
  configurations.testRuntimeOnly.canBeResolved = true
  configurations.testImplementation.canBeResolved = true
}

dependencies {
  ['streams', 'clients'].each {
    implementation "org.apache.kafka:kafka-$it:2.8.0"
  }

  ['starter', 'starter-web', 'starter-actuator'].each {
    implementation "org.springframework.boot:spring-boot-$it"
  }

  implementation 'org.springframework.kafka:spring-kafka'

  implementation 'org.slf4j:slf4j-api:1.7.36'

  implementation 'net.logstash.logback:logstash-logback-encoder:7.1.1'
  implementation 'ch.qos.logback:logback-classic:1.2.11'

  ['core', 'spring'].each {
    testImplementation "org.spockframework:spock-$it:2.1-groovy-3.0"
  }

  ['testcontainers','spock','localstack'].each {
    testImplementation "org.testcontainers:$it:1.17.1"
  }

  testImplementation 'org.codehaus.groovy:groovy-json:3.0.10'
  testImplementation "io.github.smdawe:environment-variables-extension:1.1.0"

  testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

task acceptanceTest(type: Test) {
  testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
  classpath += sourceSets.acceptanceTest.runtimeClasspath
}

test {
  useJUnitPlatform()
}

acceptanceTest {
  useJUnitPlatform()
}
